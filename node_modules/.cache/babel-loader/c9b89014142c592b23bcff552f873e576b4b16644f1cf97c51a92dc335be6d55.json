{"ast":null,"code":"import _slicedToArray from \"C:/Users/jaimeen/fashin-buzz/FabFusion/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { useEffect, useState } from 'react';\nimport { generateColor } from '../util';\nfunction hasValue(value) {\n  return value !== undefined;\n}\nvar useColorState = function useColorState(defaultStateValue, option) {\n  var defaultValue = option.defaultValue,\n    value = option.value;\n  var _useState = useState(function () {\n      var mergeState;\n      if (hasValue(value)) {\n        mergeState = value;\n      } else if (hasValue(defaultValue)) {\n        mergeState = defaultValue;\n      } else {\n        mergeState = defaultStateValue;\n      }\n      return generateColor(mergeState || '');\n    }),\n    _useState2 = _slicedToArray(_useState, 2),\n    colorValue = _useState2[0],\n    setColorValue = _useState2[1];\n  useEffect(function () {\n    if (value) {\n      setColorValue(generateColor(value));\n    }\n  }, [value]);\n  return [colorValue, setColorValue];\n};\nexport default useColorState;","map":{"version":3,"names":["useEffect","useState","generateColor","hasValue","value","undefined","useColorState","defaultStateValue","option","defaultValue","_useState","mergeState","_useState2","_slicedToArray","colorValue","setColorValue"],"sources":["C:/Users/jaimeen/fashin-buzz/FabFusion/node_modules/antd/es/color-picker/hooks/useColorState.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport { generateColor } from '../util';\r\nfunction hasValue(value) {\r\n  return value !== undefined;\r\n}\r\nconst useColorState = (defaultStateValue, option) => {\r\n  const {\r\n    defaultValue,\r\n    value\r\n  } = option;\r\n  const [colorValue, setColorValue] = useState(() => {\r\n    let mergeState;\r\n    if (hasValue(value)) {\r\n      mergeState = value;\r\n    } else if (hasValue(defaultValue)) {\r\n      mergeState = defaultValue;\r\n    } else {\r\n      mergeState = defaultStateValue;\r\n    }\r\n    return generateColor(mergeState || '');\r\n  });\r\n  useEffect(() => {\r\n    if (value) {\r\n      setColorValue(generateColor(value));\r\n    }\r\n  }, [value]);\r\n  return [colorValue, setColorValue];\r\n};\r\nexport default useColorState;"],"mappings":";AAAA,SAASA,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,SAASC,aAAa,QAAQ,SAAS;AACvC,SAASC,QAAQA,CAACC,KAAK,EAAE;EACvB,OAAOA,KAAK,KAAKC,SAAS;AAC5B;AACA,IAAMC,aAAa,GAAG,SAAhBA,aAAaA,CAAIC,iBAAiB,EAAEC,MAAM,EAAK;EACnD,IACEC,YAAY,GAEVD,MAAM,CAFRC,YAAY;IACZL,KAAK,GACHI,MAAM,CADRJ,KAAK;EAEP,IAAAM,SAAA,GAAoCT,QAAQ,CAAC,YAAM;MACjD,IAAIU,UAAU;MACd,IAAIR,QAAQ,CAACC,KAAK,CAAC,EAAE;QACnBO,UAAU,GAAGP,KAAK;MACpB,CAAC,MAAM,IAAID,QAAQ,CAACM,YAAY,CAAC,EAAE;QACjCE,UAAU,GAAGF,YAAY;MAC3B,CAAC,MAAM;QACLE,UAAU,GAAGJ,iBAAiB;MAChC;MACA,OAAOL,aAAa,CAACS,UAAU,IAAI,EAAE,CAAC;IACxC,CAAC,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAVKI,UAAU,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAWhCZ,SAAS,CAAC,YAAM;IACd,IAAII,KAAK,EAAE;MACTW,aAAa,CAACb,aAAa,CAACE,KAAK,CAAC,CAAC;IACrC;EACF,CAAC,EAAE,CAACA,KAAK,CAAC,CAAC;EACX,OAAO,CAACU,UAAU,EAAEC,aAAa,CAAC;AACpC,CAAC;AACD,eAAeT,aAAa"},"metadata":{},"sourceType":"module","externalDependencies":[]}